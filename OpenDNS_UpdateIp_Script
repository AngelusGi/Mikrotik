# Set the hostname or label of network to be updated. This is the name of your OpenDNS network on the Dashboard. 
# Note, you must have admin or edit (Read/Write/Grant in the OpenDNS Dashboard) to update IP addresses. 
# Policy permission needed: ftp, read, write, test
# Add your values into: odnsuser, odnspass, odnshost, inetinterface

:log info message="START: OpenDNS Update"

:local odnsuser "YOUR-OPENDNS-USERNAME";
:local odnspass "YOUR-OPENDNS-TOKEN";
:local odnshost "YOUR-OPENDNS-HOST-NAME";
:local inetinterface "YOUR-WAN-INTERFACE-NAME";

:local odnsurl "https://updates.opendns.com/nic/update\3Fhostname=$odnshost";
:local ipFile "YOUR-FOLDER-OR-DIRVE-PATH/mypublicip.txt";
:local responseFile "YOUR-FOLDER-OR-DIRVE-PATH/odns_response.txt";

:local currentIP;
:local previousIP;

:local ipDetectService1 "https://api.ipify.org/";
:local ipDetectService2 "https://ipv4.icanhazip.com/";

:do { :set previousIP [/file get [/file find name=($ipFile)] contents] } on-error={
	:log warning message="OpenDNS: file $ipFile does not exists.";
	/file print file=$ipFile;
	:delay 3;
	/file set $ipFile contents="";
	:set previousIP "";
	:log info message="OpenDNS: file $ipFile created as empty.";
};

:do { [/file get [/file find name=($responseFile)] contents] } on-error={
	:log warning message="OpenDNS: file $responseFile does not exists.";
	/file print file=$responseFile;
	:delay 3;
	/file set $responseFile contents="";
	:log info message="OpenDNS: file $responseFile created as empty.";
}

:do { :set currentIP ([/tool fetch url=$ipDetectService1 output=user as-value]->"data") } on-error={
	:log warning message="OpenDNS: Service does not work: $ipDetectService1";

	# Second try in case the first one failed
	:do { :set currentIP ([/tool fetch url=$ipDetectService2 output=user as-value]->"data") } on-error={
		:log error message="OpenDNS: Service does not work: $ipDetectService2";
	};
};

:if ($currentIP != $previousIP) do={
    :log warning message="OpenDNS: Update needed, current IP ($currentIP) and previous IP ($previousIP)";

    /file set $ipFile contents="$currentIP";

    :log info "OpenDNS: Sending update for $odnshost";

    /tool fetch url=($odnsurl) user=$odnsuser password=$odnspass mode=http dst-path=($responseFile);

    :delay 5;
    :local odnsReply [/file get $responseFile contents];
    :log info "OpenDNS: reply was $odnsReply";

} else={
    :log info "OpenDNS: Previous IP and current IP equal ($currentIP), no update need";
}

:log info message="END: OpenDNS Update";
